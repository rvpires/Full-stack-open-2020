{"ast":null,"code":"var _jsxFileName = \"/home/rvp/Desktop/Full-stack-open-2020/part5/bloglist-frontend/src/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport Blog from './components/Blog';\nimport blogService from './services/blogs';\nimport loginService from './services/login';\nimport login from './services/login';\n\nconst App = () => {\n  const [blogs, setBlogs] = useState([]);\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [user, setUser] = useState(null);\n  useEffect(() => {\n    blogService.getAll().then(blogs => setBlogs(blogs));\n  }, []);\n  useEffect(() => {\n    const loggedUserJSON = window.localStorage.getItem('loggedUser');\n\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON);\n      setUser(user);\n    }\n  }, []);\n\n  const handleLogin = async event => {\n    event.preventDefault();\n    console.log('logging in with', username, password);\n\n    try {\n      const user = await loginService.login({\n        username,\n        password\n      });\n      window.localStorage.setItem('loggedUser', JSON.stringify(user));\n      setUser(user);\n      setUsername('');\n      setPassword('');\n    } catch (exception) {\n      console.log('error credentials');\n    }\n  };\n\n  const logOut = () => {};\n\n  if (user === null) {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, \"login into application\"), React.createElement(\"form\", {\n      onSubmit: handleLogin,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, \"username\", React.createElement(\"input\", {\n      type: \"text\",\n      value: username,\n      name: \"Username\",\n      onChange: ({\n        target\n      }) => setUsername(target.value),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, \"password\", React.createElement(\"input\", {\n      type: \"password\",\n      value: password,\n      name: \"Password\",\n      onChange: ({\n        target\n      }) => setPassword(target.value),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    })), React.createElement(\"button\", {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, \"login\"), React.createElement(\"button\", {\n      onClick: () => setUser(null),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, \"logout\")));\n  }\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, \"blogs\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, user.username, \" logged in\"), blogs.map(blog => React.createElement(Blog, {\n    key: blog.id,\n    blog: blog,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  })));\n};\n\nexport default App;","map":{"version":3,"sources":["/home/rvp/Desktop/Full-stack-open-2020/part5/bloglist-frontend/src/App.js"],"names":["React","useState","useEffect","Blog","blogService","loginService","login","App","blogs","setBlogs","username","setUsername","password","setPassword","user","setUser","getAll","then","loggedUserJSON","window","localStorage","getItem","JSON","parse","handleLogin","event","preventDefault","console","log","setItem","stringify","exception","logOut","target","value","map","blog","id"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport Blog from './components/Blog'\nimport blogService from './services/blogs'\nimport loginService from './services/login'\nimport login from './services/login'\n\nconst App = () => {\n\n  const [blogs, setBlogs] = useState([])\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n  const [user, setUser] = useState(null)\n\n\n  useEffect(() => {\n    blogService.getAll().then(blogs =>\n      setBlogs(blogs)\n    )\n  }, [])\n\n  useEffect(() => {\n\n    const loggedUserJSON = window.localStorage.getItem('loggedUser')\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON)\n      setUser(user)\n    }\n  }, [])\n\n\n  const handleLogin = async (event) => {\n\n    event.preventDefault()\n    console.log('logging in with', username, password)\n\n    try {\n      const user = await loginService.login({ username, password })\n      window.localStorage.setItem('loggedUser', JSON.stringify(user)) \n      setUser(user)\n      setUsername('')\n      setPassword('')\n    }\n    catch (exception) {\n\n      console.log('error credentials')\n    }\n\n\n  }\n\n\n  const logOut =  () => {\n\n\n  }\n\n  if (user === null) {\n    return (\n      <div>\n        <h1>login into application</h1>\n        <form onSubmit={handleLogin}>\n          <div>\n            username\n            <input\n              type=\"text\"\n              value={username}\n              name=\"Username\"\n              onChange={({ target }) => setUsername(target.value)}\n            />\n          </div>\n          <div>\n            password\n            <input\n              type=\"password\"\n              value={password}\n              name=\"Password\"\n              onChange={({ target }) => setPassword(target.value)}\n            />\n          </div>\n          <button type=\"submit\">login</button>\n          <button onClick={() => setUser(null)}>logout</button>\n        </form>\n      </div>\n    )\n  }\n\n  return (\n    <div>\n      <h2>blogs</h2>\n      <p>{user.username} logged in</p>\n      {blogs.map(blog => <Blog key={blog.id} blog={blog} />\n      )}\n    </div>\n  )\n}\n\nexport default App"]},"metadata":{},"sourceType":"module"}