{"ast":null,"code":"var _jsxFileName = \"/home/rvp/Desktop/Full-stack-open-2020/part7/blog/client/src/components/Togglable.js\";\nimport React, { useState, useImperativeHandle } from 'react';\nconst Togglable = React.forwardRef((props, ref) => {\n  const [visible, setVisible] = useState(false);\n  const hideWhenVisible = {\n    display: visible ? 'none' : ''\n  };\n  const showWhenVisible = {\n    display: visible ? '' : 'none'\n  };\n\n  const toggleVisibility = () => {\n    setVisible(!visible);\n  };\n\n  useImperativeHandle(ref, () => {\n    return {\n      toggleVisibility\n    };\n  });\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    style: hideWhenVisible,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    onClick: toggleVisibility,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, props.buttonLabel)), React.createElement(\"div\", {\n    style: showWhenVisible,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, props.children, React.createElement(\"button\", {\n    onClick: toggleVisibility,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, \"cancel\")));\n});\nTogglable.displayName = 'Togglable';\nexport default Togglable;","map":{"version":3,"sources":["/home/rvp/Desktop/Full-stack-open-2020/part7/blog/client/src/components/Togglable.js"],"names":["React","useState","useImperativeHandle","Togglable","forwardRef","props","ref","visible","setVisible","hideWhenVisible","display","showWhenVisible","toggleVisibility","buttonLabel","children","displayName"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,mBAA1B,QAAqD,OAArD;AAEA,MAAMC,SAAS,GAAGH,KAAK,CAACI,UAAN,CAAiB,CAACC,KAAD,EAAQC,GAAR,KAAgB;AAElD,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAAC,KAAD,CAAtC;AAEA,QAAMQ,eAAe,GAAG;AAAEC,IAAAA,OAAO,EAAEH,OAAO,GAAG,MAAH,GAAY;AAA9B,GAAxB;AACA,QAAMI,eAAe,GAAG;AAAED,IAAAA,OAAO,EAAEH,OAAO,GAAG,EAAH,GAAQ;AAA1B,GAAxB;;AAEA,QAAMK,gBAAgB,GAAG,MAAM;AAC9BJ,IAAAA,UAAU,CAAC,CAACD,OAAF,CAAV;AACA,GAFD;;AAIAL,EAAAA,mBAAmB,CAACI,GAAD,EAAM,MAAM;AAC9B,WAAO;AACNM,MAAAA;AADM,KAAP;AAGA,GAJkB,CAAnB;AAMA,SACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC;AAAK,IAAA,KAAK,EAAEH,eAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC;AAAQ,IAAA,OAAO,EAAEG,gBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAoCP,KAAK,CAACQ,WAA1C,CADD,CADD,EAIC;AAAK,IAAA,KAAK,EAAEF,eAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACEN,KAAK,CAACS,QADR,EAEC;AAAQ,IAAA,OAAO,EAAEF,gBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFD,CAJD,CADD;AAWA,CA5BiB,CAAlB;AA8BAT,SAAS,CAACY,WAAV,GAAwB,WAAxB;AAGA,eAAeZ,SAAf","sourcesContent":["import React, { useState, useImperativeHandle } from 'react'\n\nconst Togglable = React.forwardRef((props, ref) => {\n\n\tconst [visible, setVisible] = useState(false)\n\n\tconst hideWhenVisible = { display: visible ? 'none' : '' }\n\tconst showWhenVisible = { display: visible ? '' : 'none' }\n\n\tconst toggleVisibility = () => {\n\t\tsetVisible(!visible)\n\t}\n\n\tuseImperativeHandle(ref, () => {\n\t\treturn {\n\t\t\ttoggleVisibility\n\t\t}\n\t})\n\n\treturn (\n\t\t<div>\n\t\t\t<div style={hideWhenVisible}>\n\t\t\t\t<button onClick={toggleVisibility}>{props.buttonLabel}</button>\n\t\t\t</div>\n\t\t\t<div style={showWhenVisible}>\n\t\t\t\t{props.children}\n\t\t\t\t<button onClick={toggleVisibility}>cancel</button>\n\t\t\t</div>\n\t\t</div>\n\t)\n})\n\nTogglable.displayName = 'Togglable'\n\n\nexport default Togglable"]},"metadata":{},"sourceType":"module"}