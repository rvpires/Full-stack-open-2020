{"ast":null,"code":"import blogService from '../services/blogs';\n\nconst sortBlogs = blogs => {\n  const orderFunction = (a, b) => {\n    if (a.likes > b.likes) {\n      return -1;\n    }\n\n    if (a.likes < b.likes) {\n      return 1;\n    }\n\n    return 0;\n  };\n\n  return blogs.sort(orderFunction);\n};\n\nconst blogReducer = (state = [], action) => {\n  console.log('state', state);\n\n  switch (action.type) {\n    case 'INIT':\n      return action.data.blogs;\n\n    case 'UPDATE':\n      let newBlogs = state.filter(blog => blog.id !== action.data.newBlog.id);\n      return sortBlogs(newBlogs.concat(action.data.newBlog));\n\n    case 'DELETE':\n      return state.filter(blog => blog.id !== action.data.blog.id);\n\n    case 'ADD':\n      return sortBlogs([...state, action.data.newBlog]);\n\n    default:\n      return state;\n  }\n};\n\nexport const initBlogs = () => {\n  return async dispatch => {\n    const blogs = await blogService.getAll();\n    dispatch({\n      type: 'INIT',\n      data: {\n        blogs: sortBlogs(blogs)\n      }\n    });\n  };\n};\nexport const updateBlog = blog => {\n  return async dispatch => {\n    const newBlog = await blogService.update(blog);\n    dispatch({\n      type: 'UPDATE',\n      data: {\n        newBlog\n      }\n    });\n  };\n};\nexport const deleteBlog = (blog, user) => {\n  return async dispatch => {\n    blogService.setToken(user.token);\n    await blogService.deleteBlog(blog);\n    dispatch({\n      type: 'DELETE',\n      data: {\n        blog\n      }\n    });\n  };\n};\nexport const addBlog = (blog, user) => {\n  return async dispatch => {\n    blogService.setToken(user.token);\n    const newBlog = await blogService.create(blog);\n    dispatch({\n      type: 'ADD',\n      data: {\n        newBlog\n      }\n    });\n  };\n};\nexport default blogReducer;","map":{"version":3,"sources":["/home/rvp/Desktop/Full-stack-open-2020/part7/blog/client/src/reducers/blogReducer.js"],"names":["blogService","sortBlogs","blogs","orderFunction","a","b","likes","sort","blogReducer","state","action","console","log","type","data","newBlogs","filter","blog","id","newBlog","concat","initBlogs","dispatch","getAll","updateBlog","update","deleteBlog","user","setToken","token","addBlog","create"],"mappings":"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","sourcesContent":["import blogService from '../services/blogs'\n\nconst sortBlogs = blogs => {\n\n\tconst orderFunction = (a, b) => {\n\t\tif (a.likes > b.likes) {\n\t\t\treturn -1\n\t\t}\n\t\tif (a.likes < b.likes) {\n\t\t\treturn 1\n\t\t}\n\n\t\treturn 0\n\t}\n\n\treturn (blogs.sort(orderFunction))\n}\n\nconst blogReducer = (state = [],  action) => {\n\n\tconsole.log('state' , state)\n\n\tswitch (action.type) {\n\n\t\tcase 'INIT':\n\t\t\treturn action.data.blogs\n\n\t\tcase 'UPDATE':\n\t\t\tlet newBlogs = state.filter(blog => blog.id !== action.data.newBlog.id) \n\t\t\treturn sortBlogs(newBlogs.concat(action.data.newBlog))\n\t\t\n\t\tcase 'DELETE':\n\t\t\treturn state.filter(blog => blog.id !== action.data.blog.id)\t\n\t\t\n\t\tcase 'ADD':\n\n\t\t\treturn sortBlogs([...state , action.data.newBlog])\n\t\t\n\t\tdefault:\n\t\t\treturn state\n\n\t}\n}\n\n\nexport const initBlogs = () =>\n{\n\treturn async dispatch => {\n\n\t\tconst blogs = await blogService.getAll()\n\t\tdispatch(({ type: 'INIT', data: { blogs : sortBlogs(blogs) } }))\n\t}\n}\n\nexport const updateBlog = (blog) =>\n{\n\treturn async dispatch => {\n\t\tconst newBlog = await blogService.update(blog)\n\t\tdispatch({ type : 'UPDATE' , data : {newBlog}})\n\t}\n\n}\n\nexport const deleteBlog = (blog, user) =>\n{\n\treturn async dispatch => {\n\t\tblogService.setToken(user.token)\n\t\tawait blogService.deleteBlog(blog)\n\t\tdispatch({type : 'DELETE' , data : {blog}})\n\t}\t\n}\n\nexport const addBlog = (blog , user) =>\n{\n\treturn async dispatch => {\n\t\tblogService.setToken(user.token)\n\t\tconst newBlog = await blogService.create(blog)\n\t\tdispatch({type : 'ADD' , data : {newBlog}})\n\t}\n}\n\nexport default blogReducer\n"]},"metadata":{},"sourceType":"module"}